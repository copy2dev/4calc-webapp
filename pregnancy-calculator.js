/**
 * р╕гр╕░р╕Ър╕Ър╕Др╕│р╕Щр╕зр╕Ур╕нр╕▓р╕вр╕╕р╕Др╕гр╕гр╕ар╣М
 * Pregnancy Calculator
 * р╕Др╕│р╕Щр╕зр╕Ур╕нр╕▓р╕вр╕╕р╕Др╕гр╕гр╕ар╣Мр╕Ир╕▓р╕Бр╕зр╕▒р╕Щр╣Бр╕гр╕Бр╕Вр╕нр╕Зр╕Ыр╕гр╕░р╕Ир╕│р╣Ар╕Фр╕╖р╕нр╕Щр╕Др╕гр╕▒р╣Йр╕Зр╕кр╕╕р╕Фр╕Чр╣Йр╕▓р╕в (LMP) р╕лр╕гр╕╖р╕нр╕зр╕▒р╕Щр╕Хр╕▒р╣Йр╕Зр╕Др╕гр╕гр╕ар╣М
 */

// р╕Др╣Ир╕▓р╕Др╕Зр╕Чр╕╡р╣Ир╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕Др╕│р╕Щр╕зр╕Ур╕Др╕гр╕гр╕ар╣М
export const PREGNANCY_CONSTANTS = {
  // р╕гр╕░р╕вр╕░р╣Ар╕зр╕ер╕▓р╕Др╕гр╕гр╕ар╣Мр╕бр╕▓р╕Хр╕гр╕Рр╕▓р╕Щ
  STANDARD_PREGNANCY_DAYS: 280,      // 40 р╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣М
  STANDARD_PREGNANCY_WEEKS: 40,      // 40 р╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣М
  
  // р╣Др╕Хр╕гр╕бр╕▓р╕кр╕Хр╣Ир╕▓р╕Зр╣Ж
  TRIMESTERS: {
    first: { start: 0, end: 13, name: 'р╣Др╕Хр╕гр╕бр╕▓р╕кр╣Бр╕гр╕Б', nameEN: 'First Trimester' },
    second: { start: 14, end: 27, name: 'р╣Др╕Хр╕гр╕бр╕▓р╕кр╕Чр╕╡р╣Ир╕кр╕нр╕З', nameEN: 'Second Trimester' },
    third: { start: 28, end: 42, name: 'р╣Др╕Хр╕гр╕бр╕▓р╕кр╕Чр╕╡р╣Ир╕кр╕▓р╕б', nameEN: 'Third Trimester' }
  },
  
  // р╕Кр╣Ир╕зр╕Зр╣Ар╕зр╕ер╕▓р╕Др╕ер╕нр╕Фр╕Ыр╕Бр╕Хр╕┤
  NORMAL_DELIVERY_RANGE: {
    early: 37,    // р╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣Мр╕Чр╕╡р╣И 37
    late: 42      // р╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣Мр╕Чр╕╡р╣И 42
  }
};

// р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Юр╕▒р╕Тр╕Щр╕▓р╕Бр╕▓р╕гр╕Хр╕▓р╕бр╕нр╕▓р╕вр╕╕р╕Др╕гр╕гр╕ар╣М
export const PREGNANCY_MILESTONES = {
  4: {
    th: "тЭдя╕П р╕лр╕▒р╕зр╣Гр╕Ир╣Ар╕гр╕┤р╣Ир╕бр╣Ар╕Хр╣Йр╕Щ, р╕гр╕░р╕Ър╕Ър╕Ыр╕гр╕░р╕кр╕▓р╕Чр╣Ар╕гр╕┤р╣Ир╕бр╕Юр╕▒р╕Тр╕Щр╕▓",
    en: "тЭдя╕П Heart starts beating, nervous system begins developing"
  },
  8: {
    th: "ЁЯС╢ р╕нр╕зр╕▒р╕вр╕зр╕░р╕лр╕ер╕▒р╕Бр╣Ар╕гр╕┤р╣Ир╕бр╣Ар╕Бр╕┤р╕Ф, р╕Вр╕Щр╕▓р╕Фр╕Ыр╕гр╕░р╕бр╕▓р╕У 1.6 р╕Лр╕б.",
    en: "ЁЯС╢ Major organs begin forming, about 1.6 cm in size"
  },
  12: {
    th: "ЁЯж┤ р╕Бр╕гр╕░р╕Фр╕╣р╕Бр╣Ар╕гр╕┤р╣Ир╕бр╣Бр╕Вр╣Зр╕З, р╣Ар╕Юр╕ир╣Ар╕гр╕┤р╣Ир╕бр╕Кр╕▒р╕Фр╣Ар╕Ир╕Щ",
    en: "ЁЯж┤ Bones start hardening, gender becomes clear"
  },
  16: {
    th: "ЁЯСВ р╕лр╕╣р╣Ар╕гр╕┤р╣Ир╕бр╣Др╕Фр╣Йр╕вр╕┤р╕Щ, р╕Ьр╕бр╣Ар╕гр╕┤р╣Ир╕бр╣Ар╕Ир╕гр╕┤р╕Н",
    en: "ЁЯСВ Ears start hearing, hair begins growing"
  },
  20: {
    th: "ЁЯд▒ р╣Бр╕бр╣Ир╣Ар╕гр╕┤р╣Ир╕бр╕гр╕╣р╣Йр╕кр╕╢р╕Бр╣Ар╕Фр╣Зр╕Бр╕Фр╕┤р╣Йр╕Щ, р╕Вр╕Щр╕▓р╕Фр╕Ыр╕гр╕░р╕бр╕▓р╕У 25 р╕Лр╕б.",
    en: "ЁЯд▒ Mother starts feeling movement, about 25 cm long"
  },
  24: {
    th: "ЁЯСБя╕П р╕Хр╕▓р╣Ар╕гр╕┤р╣Ир╕бр╣Ар╕Ыр╕┤р╕Фр╣Др╕Фр╣Й, р╕Ыр╕нр╕Фр╣Ар╕гр╕┤р╣Ир╕бр╕Юр╕▒р╕Тр╕Щр╕▓",
    en: "ЁЯСБя╕П Eyes can open, lungs start developing"
  },
  28: {
    th: "ЁЯза р╕кр╕бр╕нр╕Зр╕Юр╕▒р╕Тр╕Щр╕▓р╣Ар╕гр╣Зр╕з, р╕бр╕╡р╣Вр╕нр╕Бр╕▓р╕кр╕гр╕нр╕Фр╕Цр╣Йр╕▓р╕Др╕ер╕нр╕Фр╕Бр╣Ир╕нр╕Щр╕Бр╕│р╕лр╕Щр╕Ф",
    en: "ЁЯза Rapid brain development, viable if born premature"
  },
  32: {
    th: "ЁЯТк р╕Бр╕ер╣Йр╕▓р╕бр╣Ар╕Щр╕╖р╣Йр╕нр╣Бр╕Вр╣Зр╕Зр╣Бр╕гр╕Зр╕Вр╕╢р╣Йр╕Щ, р╣Ар╕гр╕┤р╣Ир╕бр╕кр╕░р╕кр╕бр╣Др╕Вр╕бр╕▒р╕Щ",
    en: "ЁЯТк Stronger muscles, fat storage begins"
  },
  36: {
    th: "ЁЯлБ р╕Ыр╕нр╕Фр╣Ар╕Бр╕╖р╕нр╕Ър╕Юр╕гр╣Йр╕нр╕б, р╕Щр╣Йр╕│р╕лр╕Щр╕▒р╕Бр╕Ыр╕гр╕░р╕бр╕▓р╕У 2.5 р╕Бр╕Б.",
    en: "ЁЯлБ Lungs nearly ready, weight about 2.5 kg"
  },
  40: {
    th: "ЁЯН╝ р╕Юр╕гр╣Йр╕нр╕бр╕Др╕ер╕нр╕Ф! р╕Щр╣Йр╕│р╕лр╕Щр╕▒р╕Бр╕Ыр╕гр╕░р╕бр╕▓р╕У 3-3.5 р╕Бр╕Б.",
    en: "ЁЯН╝ Ready for birth! Weight about 3-3.5 kg"
  }
};

// р╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│р╕Хр╕▓р╕бр╣Др╕Хр╕гр╕бр╕▓р╕к
export const TRIMESTER_ADVICE = {
  first: {
    th: [
      "ЁЯеЧ р╕гр╕▒р╕Ър╕Ыр╕гр╕░р╕Чр╕▓р╕Щр╣Вр╕Яр╕ер╕┤р╕Бр╣Бр╕нр╕Лр╕┤р╕Ф 400-800 р╣Др╕бр╣Вр╕Др╕гр╕Бр╕гр╕▒р╕б/р╕зр╕▒р╕Щ",
      "ЁЯЪн р╕лр╕ер╕╡р╕Бр╣Ар╕ер╕╡р╣Ир╕вр╕Зр╕Ър╕╕р╕лр╕гр╕╡р╣И р╣Бр╕нр╕ер╕Бр╕нр╕ор╕нр╕ер╣М р╣Бр╕ер╕░р╕вр╕▓р╣Ар╕кр╕Юр╕Хр╕┤р╕Ф",
      "тШХ р╕Ир╕│р╕Бр╕▒р╕Фр╕Др╕▓р╣Ар╕Яр╕нр╕╡р╕Щр╣Др╕бр╣Ир╣Ар╕Бр╕┤р╕Щ 200 р╕бр╕Б./р╕зр╕▒р╕Щ",
      "ЁЯШ┤ р╕Юр╕▒р╕Бр╕Ьр╣Ир╕нр╕Щр╣Гр╕лр╣Йр╣Ар╕Юр╕╡р╕вр╕Зр╕Юр╕н р╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Др╕зр╕▓р╕бр╣Ар╕Др╕гр╕╡р╕вр╕Ф"
    ],
    en: [
      "ЁЯеЧ Take 400-800 mcg folic acid daily",
      "ЁЯЪн Avoid smoking, alcohol, and drugs",
      "тШХ Limit caffeine to under 200mg/day",
      "ЁЯШ┤ Get adequate rest, manage stress"
    ]
  },
  second: {
    th: [
      "ЁЯПГтАНтЩАя╕П р╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕кр╕бр╣Ир╕│р╣Ар╕кр╕бр╕н р╣Ар╕Кр╣Ир╕Щ р╣Ар╕Фр╕┤р╕Щ р╕зр╣Ир╕▓р╕вр╕Щр╣Йр╕│ р╣Вр╕вр╕Др╕░",
      "ЁЯй║ р╕Хр╕гр╕зр╕Ир╕Др╕гр╕гр╕ар╣Мр╕Чр╕╕р╕Б 4 р╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣М",
      "ЁЯеЫ р╕Фр╕╖р╣Ир╕бр╕Щр╣Йр╕│р╣Гр╕лр╣Йр╣Ар╕Юр╕╡р╕вр╕Зр╕Юр╕н р╕нр╕вр╣Ир╕▓р╕Зр╕Щр╣Йр╕нр╕в 8-10 р╣Бр╕Бр╣Йр╕з/р╕зр╕▒р╕Щ",
      "ЁЯСХ р╣Гр╕кр╣Ир╣Ар╕кр╕╖р╣Йр╕нр╕Ьр╣Йр╕▓р╕Др╕ер╕▓р╕вр╕Чр╣Йр╕нр╕З р╕гр╕нр╕Зр╣Ар╕Чр╣Йр╕▓р╕кр╣Йр╕Щр╣Ар╕Хр╕╡р╣Йр╕в"
    ],
    en: [
      "ЁЯПГтАНтЩАя╕П Exercise regularly: walking, swimming, yoga",
      "ЁЯй║ Prenatal checkups every 4 weeks",
      "ЁЯеЫ Stay hydrated, at least 8-10 glasses/day",
      "ЁЯСХ Wear loose clothing, low-heeled shoes"
    ]
  },
  third: {
    th: [
      "ЁЯОТ р╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓р╕Др╕ер╕нр╕Ф р╕Лр╕╖р╣Йр╕нр╕Вр╕нр╕Зр╣Гр╕Кр╣Йр╣Ар╕Фр╣Зр╕Б",
      "ЁЯПе р╣Ар╕гр╕╡р╕вр╕Щр╕Др╕ер╕▓р╕кр╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Др╕ер╕нр╕Ф р╣Ар╕ер╕╖р╕нр╕Бр╣Вр╕гр╕Зр╕Юр╕вр╕▓р╕Ър╕▓р╕е",
      "ЁЯШМ р╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Ир╕┤р╕Хр╣Гр╕И р╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╕Чр╣Ир╕▓р╕Др╕ер╕нр╕Ф",
      "ЁЯСе р╕Ир╕▒р╕Фр╕гр╕░р╕Ър╕Ър╕Кр╣Ир╕зр╕вр╣Ар╕лр╕ер╕╖р╕нр╕лр╕ер╕▒р╕Зр╕Др╕ер╕нр╕Ф"
    ],
    en: [
      "ЁЯОТ Pack hospital bag, buy baby essentials",
      "ЁЯПе Attend birthing classes, choose hospital",
      "ЁЯШМ Mental preparation, learn birthing positions",
      "ЁЯСе Arrange postpartum support system"
    ]
  }
};

/**
 * р╕Др╕│р╕Щр╕зр╕Ур╕нр╕▓р╕вр╕╕р╕Др╕гр╕гр╕ар╣Мр╕Ир╕▓р╕Бр╕зр╕▒р╕Щ LMP (Last Menstrual Period)
 * @param {Date} lmpDate - р╕зр╕▒р╕Щр╣Бр╕гр╕Бр╕Вр╕нр╕Зр╕Ыр╕гр╕░р╕Ир╕│р╣Ар╕Фр╕╖р╕нр╕Щр╕Др╕гр╕▒р╣Йр╕Зр╕кр╕╕р╕Фр╕Чр╣Йр╕▓р╕в
 * @param {Date} currentDate - р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щ (р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕р╕Ир╕░р╣Гр╕Кр╣Йр╕зр╕▒р╕Щр╕Щр╕╡р╣Й)
 * @returns {Object} р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕нр╕▓р╕вр╕╕р╕Др╕гр╕гр╕ар╣М
 */
export function calculatePregnancyFromLMP(lmpDate, currentDate = new Date()) {
  if (!lmpDate || !(lmpDate instanceof Date)) {
    return {
      error: 'р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕Ыр╕гр╕░р╕Ир╕│р╣Ар╕Фр╕╖р╕нр╕Щр╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З',
      errorEN: 'Invalid LMP date'
    };
  }
  
  // р╕Др╕│р╕Щр╕зр╕Ур╕Ир╕│р╕Щр╕зр╕Щр╕зр╕▒р╕Щр╕Хр╕▒р╣Йр╕Зр╣Бр╕Хр╣И LMP
  const daysDiff = Math.floor((currentDate - lmpDate) / (1000 * 60 * 60 * 24));
  
  if (daysDiff < 0) {
    return {
      error: 'р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕Ыр╕гр╕░р╕Ир╕│р╣Ар╕Фр╕╖р╕нр╕Щр╕Хр╣Йр╕нр╕Зр╣Др╕бр╣Ир╣Ар╕Бр╕┤р╕Щр╕зр╕▒р╕Щр╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щ',
      errorEN: 'LMP date cannot be in the future'
    };
  }
  
  if (daysDiff > 300) {
    return {
      error: 'р╕нр╕▓р╕вр╕╕р╕Др╕гр╕гр╕ар╣Мр╣Ар╕Бр╕┤р╕Щр╕гр╕░р╕вр╕░р╣Ар╕зр╕ер╕▓р╕Ыр╕Бр╕Хр╕┤',
      errorEN: 'Pregnancy age exceeds normal range'
    };
  }
  
  // р╕Др╕│р╕Щр╕зр╕Ур╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣Мр╣Бр╕ер╕░р╕зр╕▒р╕Щ
  const weeks = Math.floor(daysDiff / 7);
  const days = daysDiff % 7;
  
  // р╕Др╕│р╕Щр╕зр╕Ур╕зр╕▒р╕Щр╕Др╕ер╕нр╕Фр╕Др╕▓р╕Фр╕Бр╕▓р╕гр╕Ур╣М (EDD)
  const eddDate = new Date(lmpDate);
  eddDate.setDate(eddDate.getDate() + PREGNANCY_CONSTANTS.STANDARD_PREGNANCY_DAYS);
  
  // р╕лр╕▓р╣Др╕Хр╕гр╕бр╕▓р╕к
  const trimester = getTrimester(weeks);
  
  // р╕Др╕│р╕Щр╕зр╕Ур╣Ар╕Ыр╕нр╕гр╣Мр╣Ар╕Лр╣Зр╕Щр╕Хр╣Мр╕Др╕зр╕▓р╕бр╕Др╕╖р╕Ър╕лр╕Щр╣Йр╕▓
  const progressPercent = Math.min((weeks / PREGNANCY_CONSTANTS.STANDARD_PREGNANCY_WEEKS) * 100, 100);
  
  // р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╣Ар╕лр╕ер╕╖р╕нр╕Ир╕Щр╕Бр╕зр╣Ир╕▓р╕Ир╕░р╕Др╕ер╕нр╕Ф
  const daysRemaining = Math.max(0, Math.floor((eddDate - currentDate) / (1000 * 60 * 60 * 24)));
  
  return {
    success: true,
    gestationalAge: {
      totalDays: daysDiff,
      weeks,
      days,
      displayText: `${weeks} р╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣М ${days} р╕зр╕▒р╕Щ`,
      displayTextEN: `${weeks} weeks ${days} days`
    },
    trimester,
    eddDate,
    lmpDate,
    currentDate,
    progressPercent: Math.round(progressPercent),
    daysRemaining,
    weeksRemaining: Math.ceil(daysRemaining / 7),
    milestone: getCurrentMilestone(weeks),
    advice: TRIMESTER_ADVICE[trimester.key],
    isFullTerm: weeks >= PREGNANCY_CONSTANTS.NORMAL_DELIVERY_RANGE.early,
    deliveryStatus: getDeliveryStatus(weeks)
  };
}

/**
 * р╕Др╕│р╕Щр╕зр╕Ур╕нр╕▓р╕вр╕╕р╕Др╕гр╕гр╕ар╣Мр╕Ир╕▓р╕Бр╕зр╕▒р╕Щр╕Хр╕▒р╣Йр╕Зр╕Др╕гр╕гр╕ар╣М/р╕Ьр╕кр╕б
 * @param {Date} conceptionDate - р╕зр╕▒р╕Щр╕Хр╕▒р╣Йр╕Зр╕Др╕гр╕гр╕ар╣М
 * @param {Date} currentDate - р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щ
 * @returns {Object} р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕нр╕▓р╕вр╕╕р╕Др╕гр╕гр╕ар╣М
 */
export function calculatePregnancyFromConception(conceptionDate, currentDate = new Date()) {
  if (!conceptionDate || !(conceptionDate instanceof Date)) {
    return {
      error: 'р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕Хр╕▒р╣Йр╕Зр╕Др╕гр╕гр╕ар╣Мр╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З',
      errorEN: 'Invalid conception date'
    };
  }
  
  // р╣Бр╕Ыр╕ер╕Зр╣Ар╕Ыр╣Зр╕Щ LMP р╣Вр╕Фр╕вр╕ер╕Ъ 14 р╕зр╕▒р╕Щ (2 р╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣М)
  const lmpDate = new Date(conceptionDate);
  lmpDate.setDate(lmpDate.getDate() - 14);
  
  return calculatePregnancyFromLMP(lmpDate, currentDate);
}

/**
 * р╕лр╕▓р╣Др╕Хр╕гр╕бр╕▓р╕кр╕Ир╕▓р╕Бр╕Ир╕│р╕Щр╕зр╕Щр╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣М
 * @param {number} weeks - р╕Ир╕│р╕Щр╕зр╕Щр╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣М
 * @returns {Object} р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Др╕Хр╕гр╕бр╕▓р╕к
 */
function getTrimester(weeks) {
  const trimesters = PREGNANCY_CONSTANTS.TRIMESTERS;
  
  if (weeks <= trimesters.first.end) {
    return { ...trimesters.first, key: 'first' };
  } else if (weeks <= trimesters.second.end) {
    return { ...trimesters.second, key: 'second' };
  } else {
    return { ...trimesters.third, key: 'third' };
  }
}

/**
 * р╕лр╕▓р╣Ар╕лр╕Хр╕╕р╕Бр╕▓р╕гр╕Ур╣Мр╕кр╕│р╕Др╕▒р╕Нр╣Гр╕Щр╕Бр╕▓р╕гр╕Юр╕▒р╕Тр╕Щр╕▓р╕Хр╕▓р╕бр╕нр╕▓р╕вр╕╕р╕Др╕гр╕гр╕ар╣М
 * @param {number} weeks - р╕Ир╕│р╕Щр╕зр╕Щр╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣М
 * @returns {Object|null} р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕лр╕Хр╕╕р╕Бр╕▓р╕гр╕Ур╣Мр╕кр╕│р╕Др╕▒р╕Н
 */
function getCurrentMilestone(weeks) {
  // р╕лр╕▓ milestone р╕Чр╕╡р╣Ир╣Гр╕Бр╕ер╣Йр╣Ар╕Др╕╡р╕вр╕Зр╕Чр╕╡р╣Ир╕кр╕╕р╕Ф
  const milestoneWeeks = Object.keys(PREGNANCY_MILESTONES).map(Number).sort((a, b) => a - b);
  
  // р╕лр╕▓ milestone р╕ер╣Ир╕▓р╕кр╕╕р╕Фр╕Чр╕╡р╣Ир╕Ьр╣Ир╕▓р╕Щр╕бр╕▓р╣Бр╕ер╣Йр╕з
  const passedMilestone = milestoneWeeks.filter(week => week <= weeks).pop();
  
  if (passedMilestone) {
    return {
      week: passedMilestone,
      ...PREGNANCY_MILESTONES[passedMilestone]
    };
  }
  
  // р╕лр╕▓ milestone р╕Цр╕▒р╕Фр╣Др╕Ы
  const nextMilestone = milestoneWeeks.find(week => week > weeks);
  if (nextMilestone) {
    return {
      week: nextMilestone,
      isUpcoming: true,
      ...PREGNANCY_MILESTONES[nextMilestone]
    };
  }
  
  return null;
}

/**
 * р╕лр╕▓р╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕Др╕ер╕нр╕Ф
 * @param {number} weeks - р╕Ир╕│р╕Щр╕зр╕Щр╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣М
 * @returns {Object} р╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕Др╕ер╕нр╕Ф
 */
function getDeliveryStatus(weeks) {
  const { early, late } = PREGNANCY_CONSTANTS.NORMAL_DELIVERY_RANGE;
  
  if (weeks < early) {
    return {
      status: 'preterm',
      message: 'р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕Цр╕╢р╕Зр╕Бр╕│р╕лр╕Щр╕Фр╕Др╕ер╕нр╕Ф',
      messageEN: 'Preterm - not yet due',
      color: 'blue'
    };
  } else if (weeks >= early && weeks <= late) {
    return {
      status: 'term',
      message: 'р╕Цр╕╢р╕Зр╕Бр╕│р╕лр╕Щр╕Фр╕Др╕ер╕нр╕Фр╣Бр╕ер╣Йр╕з',
      messageEN: 'Full term - ready for delivery',
      color: 'green'
    };
  } else {
    return {
      status: 'overdue',
      message: 'р╣Ар╕Бр╕┤р╕Щр╕Бр╕│р╕лр╕Щр╕Фр╕Др╕ер╕нр╕Ф',
      messageEN: 'Overdue - past due date',
      color: 'red'
    };
  }
}

/**
 * р╣Бр╕Ыр╕ер╕Зр╕кр╕Хр╕гр╕┤р╕Зр╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╣Ар╕Ыр╣Зр╕Щ Date object
 * @param {string} dateString - р╕кр╕Хр╕гр╕┤р╕Зр╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╣Гр╕Щр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ъ YYYY-MM-DD
 * @returns {Date|null} Date object р╕лр╕гр╕╖р╕н null р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З
 */
export function parseDate(dateString) {
  if (!dateString) return null;
  
  const date = new Date(dateString);
  return isNaN(date.getTime()) ? null : date;
}

/**
 * р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕зр╕▓р╕бр╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕Зр╕Вр╕нр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Щр╕│р╣Ар╕Вр╣Йр╕▓
 * @param {Object} params - р╕Юр╕▓р╕гр╕▓р╕бр╕┤р╣Ар╕Хр╕нр╕гр╣Мр╕Чр╕╡р╣Ир╕Ир╕░р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ
 * @returns {Object} р╕Ьр╕ер╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ
 */
export function validatePregnancyInputs(params) {
  const errors = [];
  
  if (!params.lmpDate && !params.conceptionDate) {
    errors.push('р╕Бр╕гр╕╕р╕Ур╕▓р╕гр╕░р╕Ър╕╕р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕Ыр╕гр╕░р╕Ир╕│р╣Ар╕Фр╕╖р╕нр╕Щр╕Др╕гр╕▒р╣Йр╕Зр╕кр╕╕р╕Фр╕Чр╣Йр╕▓р╕в р╕лр╕гр╕╖р╕нр╕зр╕▒р╕Щр╕Хр╕▒р╣Йр╕Зр╕Др╕гр╕гр╕ар╣М');
  }
  
  const inputDate = params.lmpDate || params.conceptionDate;
  if (inputDate) {
    const date = parseDate(inputDate);
    if (!date) {
      errors.push('р╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З');
    } else {
      const today = new Date();
      if (date > today) {
        errors.push('р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╣Др╕бр╣Ир╣Ар╕Бр╕┤р╕Щр╕зр╕▒р╕Щр╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щ');
      }
      
      const daysDiff = (today - date) / (1000 * 60 * 60 * 24);
      if (daysDiff > 365) {
        errors.push('р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╣Ар╕Бр╕┤р╕Щр╕гр╕░р╕вр╕░р╣Ар╕зр╕ер╕▓р╕Ыр╕Бр╕Хр╕┤ (р╣Ар╕Бр╕┤р╕Щ 1 р╕Ыр╕╡)');
      }
    }
  }
  
  return {
    isValid: errors.length === 0,
    errors
  };
}

/**
 * р╕кр╕гр╣Йр╕▓р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕гр╕╕р╕Ыр╕Бр╕▓р╕гр╕Хр╕▒р╣Йр╕Зр╕Др╕гр╕гр╕ар╣М
 * @param {Object} pregnancyData - р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╕Хр╕▒р╣Йр╕Зр╕Др╕гр╕гр╕ар╣М
 * @param {string} language - р╕ар╕▓р╕йр╕▓ ('th' р╕лр╕гр╕╖р╕н 'en')
 * @returns {Object} р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕гр╕╕р╕Ы
 */
export function generatePregnancySummary(pregnancyData, language = 'th') {
  const isEnglish = language === 'en';
  const { gestationalAge, trimester, eddDate, progressPercent, daysRemaining } = pregnancyData;
  
  return {
    currentAge: {
      text: isEnglish ? gestationalAge.displayTextEN : gestationalAge.displayText,
      weeks: gestationalAge.weeks,
      days: gestationalAge.days
    },
    trimester: {
      name: isEnglish ? trimester.nameEN : trimester.name,
      number: trimester.key === 'first' ? 1 : trimester.key === 'second' ? 2 : 3
    },
    dueDate: {
      date: eddDate.toLocaleDateString(isEnglish ? 'en-US' : 'th-TH'),
      daysLeft: daysRemaining,
      text: isEnglish ? `${daysRemaining} days remaining` : `р╕нр╕╡р╕Б ${daysRemaining} р╕зр╕▒р╕Щ`
    },
    progress: {
      percent: progressPercent,
      text: isEnglish ? `${progressPercent}% complete` : `р╕Ьр╣Ир╕▓р╕Щр╣Др╕Ыр╣Бр╕ер╣Йр╕з ${progressPercent}%`
    }
  };
}